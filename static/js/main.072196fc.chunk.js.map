{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","user","id","name","email","CardList","users","map","SearchBox","placeholder","onSearchChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BACnB,6BAAKL,EAAMI,KAAKE,OAChB,4BAAIN,EAAMI,KAAKG,YCFVC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SAECD,EAAMS,MAAMC,KAAI,SAAAN,GAAI,OAChB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,WCNnBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,eAAf,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BHG,G,wDAhCX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAcVa,eAAiB,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACTb,MAAO,GACPU,YAAa,IALF,E,qDASnB,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAf,GAAK,OAAI,EAAKS,SAAS,CAACT,MAAOA,S,oBAO7C,WAAU,IAAD,EACwBkB,KAAKL,MAA3Bb,EADF,EACEA,MAAOU,EADT,EACSA,YACRS,EAAgBnB,EAAMoB,QAAO,SAAAzB,GAAI,OAAIA,EAAKE,KAAKwB,cAAcC,SAASZ,EAAYW,kBACxF,OACI,sBAAK7B,UAAU,MAAf,UACI,gDACA,cAAC,EAAD,CAAWW,YAAY,eAAeC,eAAgBc,KAAKd,iBAC3D,cAAC,EAAD,CAAUJ,MAAOmB,W,GA3BfI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.072196fc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='user' src={`https://robohash.org/${props.user.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.user.name}</h2>\r\n        <p>{props.user.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component'\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => {\r\n    return <div className='card-list'>\r\n        {\r\n            props.users.map(user => (\r\n                <Card key={user.id} user={user}/>\r\n            ))\r\n        }\r\n    </div>;\r\n}","import React from 'react'\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, onSearchChange}) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={onSearchChange}/>\r\n)\r\n","import React, {Component} from 'react';\n\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\n\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props); // calls the constructor method on the Component class and this will give us access to this.state\n\n        this.state = {\n            users: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({users: users}));\n    }\n\n    onSearchChange = e => {\n        this.setState({searchField: e.target.value})\n    }\n\n    render() {\n        const {users, searchField} = this.state;\n        const filteredUsers = users.filter(user => user.name.toLowerCase().includes(searchField.toLowerCase()))\n        return (\n            <div className='App'>\n                <h1>Users Database</h1>\n                <SearchBox placeholder='Search Users' onSearchChange={this.onSearchChange}/>\n                <CardList users={filteredUsers}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}